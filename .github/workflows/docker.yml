name: Docker Image

on:
  pull_request:
    branches: [ "main" ]
    types: 
      - closed
  workflow_dispatch:
  
jobs:
  build-and-push-frontend:
    runs-on: ubuntu-latest
        
    steps:  
      - name: Log in to Docker Hub
        uses: docker/login-action@v2.2.0
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: "{{ defaultContext }}:frontend"
          file: Dockerfile.dev
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/email-generation-frontend:${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build-and-push-backend:
    runs-on: ubuntu-latest
        
    steps:  
      - name: Log in to Docker Hub
        uses: docker/login-action@v2.2.0
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: "{{defaultContext}}:backend"
          file: Dockerfile.dev
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/email-generation-backend:${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build-and-push-aws-lambda:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
    
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: "{{defaultContext}}:backend"
          file: Dockerfile.lambda.dev
          push: true
          tags: |
            ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.AWS_ECR_LAMBDA_REPO_NAME }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
